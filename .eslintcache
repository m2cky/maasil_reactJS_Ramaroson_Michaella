[{"/home/micky/Downloads/Compressed/todo/src/index.js":"1","/home/micky/Downloads/Compressed/todo/src/App.js":"2","/home/micky/Downloads/Compressed/todo/src/reducers/reducer.js":"3","/home/micky/Downloads/Compressed/todo/src/features/todo/todo.reducer.js":"4","/home/micky/Downloads/Compressed/todo/src/features/todo/todo.service.js":"5","/home/micky/Downloads/Compressed/todo/src/features/todo/todo.repository.js":"6","/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoPageManager.js":"7","/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoList/ToDoList.js":"8","/home/micky/Downloads/Compressed/todo/src/features/ChangeColor.js":"9","/home/micky/Downloads/Compressed/todo/src/reducers/data.js":"10","/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoForm/ToDoForm.js":"11","/home/micky/Downloads/Compressed/todo/src/features/post/post.reducer.js":"12","/home/micky/Downloads/Compressed/todo/src/features/post/components/PostPageManager.js":"13","/home/micky/Downloads/Compressed/todo/src/features/post/post.service.js":"14","/home/micky/Downloads/Compressed/todo/src/features/post/components/PostForm/PostForm.js":"15","/home/micky/Downloads/Compressed/todo/src/features/post/post.repository.js":"16"},{"size":731,"mtime":1618683688969,"results":"17","hashOfConfig":"18"},{"size":751,"mtime":1618772947851,"results":"19","hashOfConfig":"18"},{"size":219,"mtime":1618773746619,"results":"20","hashOfConfig":"18"},{"size":2690,"mtime":1618773604739,"results":"21","hashOfConfig":"18"},{"size":1288,"mtime":1618762698121,"results":"22","hashOfConfig":"18"},{"size":2705,"mtime":1618772200059,"results":"23","hashOfConfig":"18"},{"size":2565,"mtime":1618822517941,"results":"24","hashOfConfig":"18"},{"size":2594,"mtime":1618823527093,"results":"25","hashOfConfig":"18"},{"size":557,"mtime":1618745414492,"results":"26","hashOfConfig":"18"},{"size":92,"mtime":1618773767211,"results":"27","hashOfConfig":"18"},{"size":2234,"mtime":1618823364445,"results":"28","hashOfConfig":"18"},{"size":764,"mtime":1618821065888,"results":"29","hashOfConfig":"18"},{"size":965,"mtime":1618822499437,"results":"30","hashOfConfig":"18"},{"size":402,"mtime":1618814003959,"results":"31","hashOfConfig":"18"},{"size":2349,"mtime":1618822811669,"results":"32","hashOfConfig":"18"},{"size":616,"mtime":1618818799608,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1k0ku09",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/home/micky/Downloads/Compressed/todo/src/index.js",[],["74","75"],"/home/micky/Downloads/Compressed/todo/src/App.js",["76"],"import React, {Component} from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport ToDoPageManager from \"features/todo/components/ToDoPageManager.js\";\nimport PostPageManager from \"features/post/components/PostPageManager.js\";\n\nclass App extends Component {o\n  constructor (props) {\n    super(props);\n  }\n  render () {\n    return (\n      <div>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/' render={() => (\n              <ToDoPageManager/>\n            )} />\n          </Switch>\n          <Switch>\n            <Route exact path='/post' render={() => (\n              <PostPageManager/>\n            )} />\n          </Switch>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/home/micky/Downloads/Compressed/todo/src/reducers/reducer.js",[],"/home/micky/Downloads/Compressed/todo/src/features/todo/todo.reducer.js",[],"/home/micky/Downloads/Compressed/todo/src/features/todo/todo.service.js",["77"],"import ToDoRepository from './todo.repository';\n\nclass ToDoService {\n    constructor(){\n    }\n    \n    async getToDos(){\n        return new Promise((resolve, reject)=>{\n            let toDoRepository=new ToDoRepository()\n            toDoRepository.all().then( async (todos)=>{\n                todos.sort((a, b) => (a.doc.date < b.doc.date) ? 1 : -1);\n                resolve(todos)\n            })\n        })\n    }\n\n    async createToDo(todo){\n        return new Promise((resolve, reject) => {\n            let toDoRepository=new ToDoRepository()\n            toDoRepository.createToDo(todo).then(result=>{\n                resolve(result);\n            })\n        })\n    }\n\n    async updateToDo(todo){\n        return new Promise((resolve, reject) => {\n            let toDoRepository=new ToDoRepository()\n            toDoRepository.update(todo).then(result=>{\n                toDoRepository.getToDoById(todo.id).then(todo=>{\n                    resolve(todo);\n                })\n            })\n        })\n    }\n\n    async removeToDo(todo){\n        return new Promise((resolve, reject) => {\n            let toDoRepository=new ToDoRepository()\n            toDoRepository.remove(todo).then(result=>{\n                resolve(result);\n            })\n        })\n    }\n\n}\n\nexport default ToDoService;","/home/micky/Downloads/Compressed/todo/src/features/todo/todo.repository.js",[],"/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoPageManager.js",[],"/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoList/ToDoList.js",["78"],"/*\n<Project Name> Component\nFormLogin\n*/\nimport React, {Component} from 'react';\nimport { fetchTodos, updateToDo, removeToDo } from 'features/todo/todo.reducer';\n\nimport style from './ToDoList.css';\n\n\nimport {connect} from 'react-redux';\n\nclass ToDoList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.handleActive=this.handleActive.bind(this);\n\t\tthis.handleDelete = this.handleDelete.bind(this);\n\n\t\tthis.listToDos=this.listToDos.bind(this);\n\t\t\n\t\tthis.state={\n\t\t\tmodalIsOpen:false,\n\t\t\ttitle: \"\",\n\t\t\tdate: \"\",\n\t\t\tactive: false\n\t\t}\n\t\tthis.listToDos();\n\t}\n\n\tlistToDos(){\n\t\tthis.props.getToDos();\n\t}\n\n\thandleActive(todo){\n\t\tif(todo.active){\n\t\t\ttodo.active = false;\n\t\t}else{\n\t\t\ttodo.active = true;\n\t\t}\n\t\tthis.props.editToDo(todo).then(()=>{\n\t\t\tthis.listToDos();\n\t\t});\n\t}\n\t\n\thandleDelete(todo){\n\t\tthis.props.removeToDo(todo).then(()=>{\n\t\t\tthis.listToDos();\n\t\t});\n\t}\n\n\trender(){\n\t\tif(this.props.toDoReducer.todos){\n\t\t\tvar toDos = [];\n\t\t\tfor (const [key, value] of Object.entries(this.props.toDoReducer.todos)) {\n\t\t\t\ttoDos.push(\n\t\t\t\t\t<div className=\"col-md-12 row\">\n\t\t\t\t\t\t<button className =\"card hover-shadow col-md-8 my-2\" type=\"button\" onClick={()=>{this.handleActive(value.doc);}}>\n\t\t\t\t\t\t\t<div className =\"card-body row\">\n\t\t\t\t\t\t\t\t<div className =\"col-md-6\">\n\t\t\t\t\t\t\t\t\t{value.doc.title}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className =\"col-md-4\">\n\t\t\t\t\t\t\t\t\t{value.doc.date}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className =\"col-md-2\">\n\t\t\t\t\t\t\t\t\t{value.doc.active ? \"Active\" : \"Inactive\"}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input key = {key} type = \"hidden\" value={key}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className =\"card hover-shadow col-md-2 my-2\" type=\"button\" onClick={()=>{this.props.onUpdateToDoClick(value.doc);}}>\n\t\t\t\t\t\t\tModifier\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className =\"card hover-shadow col-md-2 my-2\" type=\"button\" onClick={()=>{this.handleDelete(value.doc);}}>\n\t\t\t\t\t\t\tSupprimer\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}else{\n\t\t\tthis.listToDos();\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"h4 justify-content-center\">\n\t\t\t\t<p class=\"title\">Liste des t√¢ches</p>\n\t\t\t\t<div className=\"form-row justify-content-center\">\n\t\t\t\t\t{ toDos }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state)=>{\n\treturn state\n}\nconst mapDispatchToProps= (dispatch)=> {\n\treturn {\n\t\tgetToDos:() => {\n\t\t\tdispatch(fetchTodos());\n\t\t},\n\t\teditToDo:(todo) =>new Promise((resolve,reject)=> {\n\t\t\tdispatch(updateToDo(todo));\n\t\t\tresolve();\n\t\t}),\n\t\tremoveToDo:(todo) =>new Promise((resolve,reject)=> {\n\t\t\tdispatch(removeToDo(todo));\n\t\t\tresolve();\n\t\t})\n\t}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ToDoList)\n","/home/micky/Downloads/Compressed/todo/src/features/ChangeColor.js",[],"/home/micky/Downloads/Compressed/todo/src/reducers/data.js",[],"/home/micky/Downloads/Compressed/todo/src/features/todo/components/ToDoForm/ToDoForm.js",["79","80","81","82"],"/*\n<Project Name> Component\nFormLogin\n*/\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { createToDo, updateToDo } from 'features/todo/todo.reducer';\n\nimport s from './ToDoForm.css';\n\nclass ToDoForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSubmit=this.handleSubmit.bind(this);\n\t\tthis.checkForm=this.checkForm.bind(this);\n\t\t\t\t\n\t\tthis.state = {\n\t\t\terror_title: \"\",\n\t\t\ttitle: this.props.todo.title ? this.props.todo.title : \"\"\n\t\t}\n\t}\n\n\thandleSubmit(event) {\n\t\tvar check = this.checkForm();\n\t\tif(check){\n\t\t\tif(this.props.type == \"creation\"){\n\t\t\t\tvar todo = {\n\t\t\t\t\ttitle : this.state.title,\n\t\t\t\t\tdate : Intl.DateTimeFormat(\"fr-FR\", {\n\t\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\t\tmonth: \"2-digit\",\n        \t\t\t\tday: \"2-digit\",\n        \t\t\t\tyear: \"2-digit\"\n\t\t\t\t\t  }).format(new Date()),\n\t\t\t\t\tactive : false\n\t\t\t\t};\n\t\t\t\tthis.props.createToDo(todo).then(()=>{\n\t\t\t\t\tthis.props.onModalChange(false);\n\t\t\t\t});\n\t\t\t}else if(this.props.type == \"modification\"){\n\t\t\t\tvar todo = this.props.todo;\n\t\t\t\ttodo.title = this.state.title;\n\t\t\t\tthis.props.editToDo(todo).then(()=>{\n\t\t\t\t\tthis.props.onModalChange(false);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\tcheckForm(){\n\t\tif(!this.state.title){\n\t\t\tthis.setState({error_title : \"Veuillez entrer un titre.\"});\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"form\">\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input type=\"text\" name=\"title\" id=\"title\" className=\"form-control\" placeholder=\"Titre\"  onChange = {(event) => this.setState({title:event.target.value})} value={ this.state.title }/>\n\t\t\t\t\t<span className=\"error_field error_title\">{this.state.error_title}</span>\n\t\t\t\t</div>\n\t\t\t\t<p><button onClick={()=>{this.handleSubmit();}} type=\"button\" className=\"btn btn-primary btn-lg btn-block\" >Enregistrer</button></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state)=>{\n\treturn state\n}\nconst mapDispatchToProps= (dispatch)=> {\n\treturn {\n\t\tcreateToDo:(todo) =>new Promise((resolve,reject)=> {\n\t\t\tdispatch(createToDo(todo));\n\t\t\tresolve();\n\t\t}),\n\t\teditToDo:(todo) =>new Promise((resolve,reject)=> {\n\t\t\tdispatch(updateToDo(todo));\n\t\t\tresolve();\n\t\t})\n\t}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ToDoForm)","/home/micky/Downloads/Compressed/todo/src/features/post/post.reducer.js",[],"/home/micky/Downloads/Compressed/todo/src/features/post/components/PostPageManager.js",[],"/home/micky/Downloads/Compressed/todo/src/features/post/post.service.js",["83"],"import PostRepository from './post.repository';\n\nclass PostService {\n    constructor(){\n    }\n    \n    async getComments(idPost){\n        return new Promise((resolve, reject)=>{\n            let postRepository=new PostRepository()\n            postRepository.getPostCommentsById(idPost).then( async (posts)=>{\n                resolve(posts);\n            })\n        })\n    }\n}\n\nexport default PostService;","/home/micky/Downloads/Compressed/todo/src/features/post/components/PostForm/PostForm.js",["84","85","86"],"/*\n<Project Name> Component\nFormLogin\n*/\nimport React, {Component} from 'react';\nimport { getComments } from 'features/post/post.reducer';\nimport {connect} from 'react-redux';\n\nimport s from './PostForm.css';\n\nclass PostForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\terror_postId: \"\",\n\t\t\tpostId: null,\n\t\t\tcomments: []\n\t\t}\n\t}\n\n\thandleSubmit(event) {\n\t\tvar check = this.checkForm();\n\t\tif(check){\n\t\t\tthis.props.getComments(this.state.postId).then(()=>{\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.setState({comments : this.props.postReducer.comments});\n\t\t\t\t}, 3000);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tcheckForm(){\n\t\tif(!this.state.postId){\n\t\t\tthis.setState({error_postId : \"Veuillez entrer un post id.\"});\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\trender(){\n\t\tvar comments = [];\n\n\t\tif(this.state.comments.length != 0){\n\t\t\tfor (const [key, value] of Object.entries(this.state.comments)) {\n\t\t\t\tcomments.push(\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<div className =\"card hover-shadow my-2\">\n\t\t\t\t\t\t\t<div className =\"card-body \">\n\t\t\t\t\t\t\t\t{value.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}else{\n\t\t\tcomments.push(\n\t\t\t\t\t<div className =\"card hover-shadow my-2\">\n\t\t\t\t\t\t<div className =\"card-body \">\n\t\t\t\t\t\t\tCe post n'a pas de commentaire\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"form justify-content-center d-grid\">\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Post ID\"  onChange = {(event) => this.setState({postId:event.target.value})}/>\n\t\t\t\t\t<span className=\"error_field error_postId text-danger\">{this.state.error_postId}</span>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<span className=\"\">Pour test: UWdcOFTc7DfzOhI6LpI4</span>\n\t\t\t\t\t<button onClick={()=>{this.handleSubmit();}} type=\"button\" className=\"btn btn-primary btn-lg btn-block mt-3 mb-3\" >Voir le post</button>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"h4 justify-content-center\">\n\t\t\t\t\t<p class=\"title\">Commentaires</p>\n\t\t\t\t\t<div className=\"form-row justify-content-center\">\n\t\t\t\t\t\t{ comments }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = (state)=>{\n\treturn state\n}\nconst mapDispatchToProps= (dispatch)=> {\n\treturn {\n\t\tgetComments:(idPost) =>new Promise((resolve,reject)=> {\n\t\t\tdispatch(getComments(idPost));\n\t\t\tresolve();\n\t\t}),\n\t}\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PostForm)\n","/home/micky/Downloads/Compressed/todo/src/features/post/post.repository.js",["87"],"import axios from 'axios';\nconst BASE_URL = 'https://dummyapi.io/data/api';\nconst APP_ID = \"607d319c8b34c8aa34567a8f\"\n\nclass PostRepository {\n    constructor(){\n    }\n    getPostCommentsById(id){\n        //https://dummyapi.io/data/api/post/UWdcOFTc7DfzOhI6LpI4/comment?page=0&limit=2\n        return new Promise((resolve, reject) => {\n            axios.get(`${BASE_URL}/post/${id}/comment?page=0&limit=2`, { headers: { 'app-id': APP_ID } })\n            .then(response =>{\n                resolve(response.data.data);\n            })\n            .catch(console.error)\n        });\n    }\n}\n\nexport default PostRepository;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":10,"endColumn":4},{"ruleId":"92","severity":1,"message":"93","line":4,"column":5,"nodeType":"94","messageId":"95","endLine":5,"endColumn":6},{"ruleId":"96","severity":1,"message":"97","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":9},{"ruleId":"101","severity":1,"message":"102","line":26,"column":23,"nodeType":"103","messageId":"104","endLine":26,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":41,"column":29,"nodeType":"103","messageId":"104","endLine":41,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":42,"column":9,"nodeType":"98","messageId":"107","endLine":42,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":4,"column":5,"nodeType":"94","messageId":"95","endLine":5,"endColumn":6},{"ruleId":"96","severity":1,"message":"100","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":9},{"ruleId":"101","severity":1,"message":"108","line":44,"column":33,"nodeType":"103","messageId":"104","endLine":44,"endColumn":35},{"ruleId":"96","severity":1,"message":"109","line":45,"column":16,"nodeType":"98","messageId":"99","endLine":45,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":6,"column":5,"nodeType":"94","messageId":"95","endLine":7,"endColumn":6},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","'s' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'todo' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]